name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Testing
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: latest
        
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: |
          .venv
          ~/.cache/uv
        key: ${{ runner.os }}-python-3.11-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-3.11-
          
    - name: Install Python dependencies
      run: uv sync --extra dev
      
    - name: Run backend tests
      run: uv run pytest tests/ -v
      
    - name: Check code formatting
      run: uv run black --check --diff ai_search_agent/ tests/
      
    - name: Run linting
      run: uv run flake8 ai_search_agent/ tests/ --max-line-length=88 --extend-ignore=E203,W503

  # Frontend Testing
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
      
    - name: Build frontend
      working-directory: frontend
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/
        retention-days: 7

  # Integration Test
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: latest
        
    - name: Install dependencies
      run: |
        uv sync --extra dev
        cd frontend && npm ci
        
    - name: Test backend startup
      run: |
        timeout 30s uv run uvicorn ai_search_agent.api:app --host 0.0.0.0 --port 8000 &
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        echo "✅ Backend is responding"
        
    - name: Test frontend build
      working-directory: frontend
      run: |
        npm run build
        echo "✅ Frontend builds successfully"
